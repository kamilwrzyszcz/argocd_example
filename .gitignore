# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
frontend/client/node_modules
frontend/client/.pnp
.pnp.js

# testing
frontend/client/coverage

# production
/frontend/client/build

# misc
frontend/client/.DS_Store
frontend/client/.env.local
frontend/client/.env.development.local
frontend/client/.env.test.local
frontend/client/.env.production.local

frontend/client/npm-debug.log*
frontend/client/yarn-debug.log*
frontend/client/yarn-error.log*

### Terraform
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
